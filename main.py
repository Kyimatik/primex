import json
import asyncio
import logging
import sys

from aiogram import Bot, Dispatcher, Router, types , F 
from aiogram.enums import ParseMode
from aiogram.filters import CommandStart , Command
from aiogram.types import Message , CallbackQuery ,FSInputFile
from aiogram.utils.markdown import hbold
from aiogram.fsm.context import FSMContext
from aiogram.types import ReplyKeyboardMarkup , InlineKeyboardMarkup , InlineKeyboardButton 
from aiogram.methods import SendMediaGroup
from aiogram.types import InputMediaPhoto 
from aiogram.types import ContentType
import buttons


# All handlers should be attached to the Router (or Dispatcher)

TOKEN = ""

allids = {
    "startphoto" : "AgACAgIAAxkBAAMDZys6_3ZcFnD2Gh-OA7mP-e1KatQAAmPeMRvSMFhJbYBcP3pZ6BYBAAMCAAN4AAM2BA",
    "secpho" : "AgACAgIAAxkBAAMLZytRMv2FfSLfwvoJHsksEwdHA9UAAqzfMRvSMFhJdiYGvaoSDDYBAAMCAAN5AAM2BA",
    "logo" : "AgACAgIAAxkBAAMfZyusnQqQYM51DoUcjNCppq2bQzsAAi_jMRvSMFhJiUh7Y981Ci0BAAMCAAN5AAM2BA",
    "vid" : "BAACAgIAAxkBAAMuZyuwO509QNFkQAuGBbq0rP1znjIAAqZlAALSMFhJaEqLGv5_9ek2BA",
    "kakprim" : "AgACAgIAAxkBAAM6ZyuyV9l3BxxNbEFtg2aa1XJBlUkAAnfjMRvSMFhJ7yKRCn6oJ5IBAAMCAAN4AAM2BA",
    "screenshot" : "AgACAgIAAxkBAANqZyvQF3h-KDDMaRqxWTkDDIiCMqUAAsThMRs5E2BJ-i1x6_mctpcBAAMCAAN3AAM2BA",
    "howthatworks" : "AgACAgIAAxkBAAIBzWcuZlDWH45lm8TW6vD_vPnQisKDAAKQ5TEb2hZ5ScQGQ6k_0B-_AQADAgADeQADNgQ",
    "trackingofprod" : "AgACAgIAAxkBAAICAWcub8TQGLMI40mCdeTL11l_wjSgAALa5TEb2hZ5SaBfScxUwrMiAQADAgADeQADNgQ"
}


bot = Bot(TOKEN)
dp = Dispatcher()
router = Router()

# —Å–∞–º–∞—è –Ω–∞—á–∞–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ —Å—Ç–∞—Ä—Ç 
@dp.message(Command("start"))
async def getstarted(message: Message):
    await message.answer_photo(allids["logo"],"""<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Primex:</b>
–í–∞—à –Ω–∞–¥–µ–∂–Ω—ã–π –ø–∞—Ä—Ç–Ω–µ—Ä –¥–ª—è —ç–∫—Å–ø—Ä–µ—Å—Å –¥–æ—Å—Ç–∞–≤–∫–∏ –∏–∑ –ö–∏—Ç–∞—è –≤ –†–æ—Å—Å–∏—é!

–ú—ã –¥–æ—Å—Ç–∞–≤–ª—è–µ–º –ø–æ—Å—ã–ª–∫–∏ –∏–∑ –ª—é–±—ã—Ö –∫–∏—Ç–∞–π—Å–∫–∏—Ö –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤ –≤–æ –≤—Å–µ —Ä–µ–≥–∏–æ–Ω—ã –†–æ—Å—Å–∏–∏, —É—á–∏—Ç—ã–≤–∞—è –≤—Å–µ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –±–∞–µ—Ä–æ–≤ –∏ –æ–±–µ—Å–ø–µ—á–∏–≤–∞—è —É–¥–æ–±—Å—Ç–≤–æ –∏ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å –Ω–∞ –∫–∞–∂–¥–æ–º —ç—Ç–∞–ø–µ –¥–æ—Å—Ç–∞–≤–∫–∏.

""",parse_mode="HTML",reply_markup=buttons.mainkb)
    


# –æ—Ç–≤–µ—Ç –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ , üëâ –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è Primex üëà
@dp.callback_query(lambda callback_query: callback_query.data == "howtouse")
async def howtouse(callback: CallbackQuery, state: FSMContext):
    await callback.message.answer_photo(allids["kakprim"],"""–í —ç—Ç–æ–º –º–µ–Ω—é —Å–æ–±—Ä–∞–Ω—ã –≤—Å–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é —Å–µ—Ä–≤–∏—Å–∞ <b>Primex</b> 

–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –ø—É–Ω–∫—Ç
""",parse_mode="HTML",reply_markup=buttons.sec)
    
    


# –æ—Ç–≤–µ—Ç –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ , –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç ? 
@dp.callback_query(lambda callback_query: callback_query.data == "howthisworks")
async def howthisworks(callback: CallbackQuery, state: FSMContext):
    await callback.message.answer_photo(allids["howthatworks"],"""<b>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</b>

–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –Ω–∞–º–∏, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
–ø—Ä–æ–π—Ç–∏
–±—ã—Å—Ç—Ä—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∞–¥—Ä–µ—Å —Å–∫–ª–∞–¥–∞ –≤ –ö–∏—Ç–∞–µ


<b>–í—ã–∫—É–ø —Ç–æ–≤–∞—Ä–∞</b>

–ó–∞–∫–∞–∑—ã–≤–∞–π—Ç–µ —Ç–æ–≤–∞—Ä—ã –∏–∑ –ö–∏—Ç–∞–π—Å–∫–∏—Ö
–º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤ –∫ –Ω–∞–º –Ω–∞ —Å–∫–ª–∞–¥ –≤ –ì—É–∞–Ω—á–∂–æ—É


<b>–ü—Ä–∏–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞</b>

–ü–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞ —Å–∫–ª–∞–¥–µ –≤–∞—à–∏—Ö –∑–∞–∫–∞–∑–æ–≤
–ú—ã –∏—Ö –∫–æ–Ω—Å–æ–ª–∏–¥–∏—Ä—É–µ–º, —É–ø–∞–∫—É–µ–º –∏ –≥–æ—Ç–æ–≤–∏–º –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ


<b>–î–æ—Å—Ç–∞–≤–ª—è–µ–º –¥–æ –≤–∞—à–∏—Ö —Ä—É–∫</b>
–î–æ—Å—Ç–∞–≤–ª—è–µ–º –≤–æ –≤—Å–µ —Ä–µ–≥–∏–æ–Ω—ã –†–æ—Å—Å–∏–∏. –î–æ –í–∞—à–µ–≥–æ
–∞–¥—Ä–µ—Å–∞ –∏–ª–∏ –¥–æ –±–ª–∏–∂–∞–π—à–µ–≥–æ –ø—É–Ω–∫—Ç–∞ –≤—ã–¥–∞—á–∏.


""",parse_mode="HTML",reply_markup=buttons.howtotrack)
    
# –æ—Ç–≤–µ—Ç –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É
@dp.callback_query(lambda callback_query: callback_query.data == "pricecount")
async def pricecount(callback: CallbackQuery, state: FSMContext):
    await callback.message.answer("""<b>–°—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞ –∫–≥ 6$
–°—Ä–æ–∫ –¥–æ—Å—Ç–∞–≤–∫–∏ 12-15 –¥–Ω–µ–π

–í–µ—Å –æ–∫—Ä—É–≥–ª—è–µ—Ç—Å—è –æ—Ç1 –∫–≥.
–û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç 5 —Ä–∞–∑–∞ 
–≤ –Ω–µ–¥–µ–ª—é.</b>
""",parse_mode="HTML",reply_markup=buttons.backtomainmenu)




# –≤–∏–¥–µ–æ —Å–∫–ª–∞–¥–∞ –≤ –ö–∏—Ç–∞–µ 
@dp.callback_query(lambda callback_query: callback_query.data == "trackorder")
async def trackorder(callback: CallbackQuery, state: FSMContext):
    await callback.message.answer_video(allids["vid"],caption="""–ù–∞—à —Å–∫–ª–∞–¥ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω –≤—Å–µ–º–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–º–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–∞—à–∏—Ö –ø–æ—Å—ã–ª–æ–∫.

–ú—ã —Ä–∞–±–æ—Ç–∞–µ–º –±–µ–∑ –≤—ã—Ö–æ–¥–Ω—ã—Ö, —á—Ç–æ–±—ã –ø—Ä–∏–Ω–∏–º–∞—Ç—å –ø–æ—Å—ã–ª–∫–∏ <b>–∫–∞–∂–¥—ã–π –¥–µ–Ω—å.</b>

–ö–æ–º–∞–Ω–¥–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤ —Ç—â–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–∞–∂–¥—É—é –ø–æ—Å—ã–ª–∫—É –∏ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –Ω–∞–¥–µ–∂–Ω—É—é —É–ø–∞–∫–æ–≤–∫—É –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –¥–æ—Å—Ç–∞–≤–∫–∏""",parse_mode="HTML",reply_markup=buttons.backtomainmenu)



# –ª–∏—á –∫–∞–±–∏–Ω–µ—Ç
@dp.callback_query(lambda callback_query: callback_query.data == "kabin")
async def kabinlich(callback: CallbackQuery, state: FSMContext):
    await callback.message.answer_photo(allids["screenshot"],"""–ü–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤–∞–º —Å—Ç–∞–Ω–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω —É–¥–æ–±–Ω—ã–π <b>–ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</b>, –≥–¥–µ –≤—ã –Ω–∞–π–¥–µ—Ç–µ –∞–¥—Ä–µ—Å–∞ –Ω–∞—à–∏—Ö —Å–∫–ª–∞–¥–æ–≤ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏ –ø–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º—É –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—é –¥–∞–Ω–Ω—ã—Ö. 
–í –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ –≤—ã —Å–º–æ–∂–µ—Ç–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Å–≤–æ–∏ –ø–æ—Å—ã–ª–∫–∏, –∑–∞–∫–∞–∑—ã–≤–∞—Ç—å –≤—ã–∫—É–ø —Ç–æ–≤–∞—Ä–æ–≤ –∏ –ø–æ–¥–∫–ª—é—á–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏.
""",parse_mode="HTML",reply_markup=buttons.screen)
    
    
# –∫–∞–∫ —è –±—É–¥—É –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ø–æ—Å—ã–ª–∫–∏ 
@dp.callback_query(lambda callback_query: callback_query.data == "howwillitrack")
async def howwillitrack(callback: CallbackQuery, state: FSMContext):
    await callback.message.answer("""<b>–ß—Ç–æ–±—ã –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ø–æ—Å—ã–ª–∫–∏, –º—ã –æ—Ç–ø—Ä–∞–≤–∏–º –≤–∞–º –Ω–∞ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é –ø–æ—á—Ç—É —Ç—Ä–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π</b>

–ö–æ–≥–¥–∞ –ø–æ—Å—ã–ª–∫–∞ –ø–æ—Å—Ç—É–ø–∏—Ç –Ω–∞ –Ω–∞—à —Å–∫–ª–∞–¥

–ö–æ–≥–¥–∞ –º—ã –æ—Ç–ø—Ä–∞–≤–∏–º –µ—ë –∫ –≤–∞–º

–ö–æ–≥–¥–∞ –ø–æ—Å—ã–ª–∫–∞ –ø—Ä–∏–±—É–¥–µ—Ç –≤ –ú–æ—Å–∫–≤—É


–í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Å—Ç–∞—Ç—É—Å –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ: https://primexcargo.org/tracking


""",parse_mode="HTML")

# –ü–æ–º–æ—â—å —Å –≤—ã–∫—É–ø–æ–º 
@dp.callback_query(lambda callback_query: callback_query.data == "helpwithbuying")
async def helpwithbuying(callback: CallbackQuery, state: FSMContext):
    await callback.message.answer("""<b>–ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å —Å –≤—ã–∫—É–ø–æ–º, —Å–ª—É–∂–±–∞ Primex —Å–¥–µ–ª–∞–µ—Ç –≤—Å—ë –ª–µ–≥–∫–æ –∏ –ø—Ä–æ—Å—Ç–æ!</b>

–ö—É–ø–∏–º —Ç–æ–≤–∞—Ä—ã —Å –∫–∏—Ç–∞–π—Å–∫–∏—Ö –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤ –∑–∞ –≤–∞—Å –≤ —Ç–æ—Ç –∂–µ –¥–µ–Ω—å ‚Äî –±—ã—Å—Ç—Ä–æ, —É–¥–æ–±–Ω–æ –∏ –¥–æ—Å—Ç—É–ø–Ω–æ. 

–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –Ω—É–∂–Ω—ã–π —Ç–æ–≤–∞—Ä –º–µ–Ω–µ–¥–∂–µ—Ä—É - @PrimexCargo, –∏ –±–∞–π–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 2 —á–∞—Å–æ–≤ –≤ —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è.


""",parse_mode="HTML",reply_markup=buttons.justback)

# –∫–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥ , –∫–æ—Ç–æ—Ä–∞—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≥–¥–µ –∫–Ω–æ–ø–∫–∞ —Å—Ç–∞—Ä—Ç –∏ —Å–∞–º –ª–æ–≥–æ—Ç–∏–ø –∏ –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
@dp.callback_query(lambda callback_query: callback_query.data == "back")
async def getback(callback: CallbackQuery, state: FSMContext):
    await callback.message.answer_photo(allids["logo"],"""<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Primex: </b>
–í–∞—à –Ω–∞–¥–µ–∂–Ω—ã–π –ø–∞—Ä—Ç–Ω–µ—Ä –¥–ª—è —ç–∫—Å–ø—Ä–µ—Å—Å –¥–æ—Å—Ç–∞–≤–∫–∏ –∏–∑ –ö–∏—Ç–∞—è –≤ –†–æ—Å—Å–∏—é!

–ú—ã –¥–æ—Å—Ç–∞–≤–ª—è–µ–º –ø–æ—Å—ã–ª–∫–∏ –∏–∑ –ª—é–±—ã—Ö –∫–∏—Ç–∞–π—Å–∫–∏—Ö –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤ –≤–æ –≤—Å–µ —Ä–µ–≥–∏–æ–Ω—ã –†–æ—Å—Å–∏–∏, —É—á–∏—Ç—ã–≤–∞—è –≤—Å–µ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –±–∞–µ—Ä–æ–≤ –∏ –æ–±–µ—Å–ø–µ—á–∏–≤–∞—è —É–¥–æ–±—Å—Ç–≤–æ –∏ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å –Ω–∞ –∫–∞–∂–¥–æ–º —ç—Ç–∞–ø–µ –¥–æ—Å—Ç–∞–≤–∫–∏.

""",parse_mode="HTML",reply_markup=buttons.mainkb)
    
# –∫–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥ , —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å 3 –∫–Ω–æ–ø–∫–∏ , –∫–∞–∫ —ç—Ç–æ —Ä–∞–±–æ–∞–µ—Ç , —Å—Å—ã–ª–∫–∞ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é , –ø–æ–º–æ—â—å —Å –≤—ã–∫—É–ø–æ–º
@dp.callback_query(lambda callback_query: callback_query.data == "backtohow")
async def getbacktohow(callback: CallbackQuery, state: FSMContext):
    await callback.message.answer_photo(allids["kakprim"],"""–í —ç—Ç–æ–º –º–µ–Ω—é —Å–æ–±—Ä–∞–Ω—ã –≤—Å–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é —Å–µ—Ä–≤–∏—Å–∞ <b>Primex</b> 

–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –ø—É–Ω–∫—Ç
""",parse_mode="HTML",reply_markup=buttons.sec)
    
    
# –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ —Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ , —Ç—É–¥–∞ –≥–¥–µ 3 –∫–Ω–æ–ø–∫–∏ 
@dp.callback_query(lambda callback_query: callback_query.data == "backfromregistration")
async def backfromregistration(callback: CallbackQuery, state: FSMContext):
    await callback.message.answer_photo(allids["kakprim"],"""–í —ç—Ç–æ–º –º–µ–Ω—é —Å–æ–±—Ä–∞–Ω—ã –≤—Å–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é —Å–µ—Ä–≤–∏—Å–∞ <b>Primex</b> 

–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –ø—É–Ω–∫—Ç
""",parse_mode="HTML",reply_markup=buttons.sec)
    

# –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –Ω–∞–∑–∞–¥ , —Å –ö—É–ø–∏–º —Ç–æ–≤–∞—Ä—ã —Å –∫–∏—Ç–∞–π—Å–∫–∏—Ö –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤
@dp.callback_query(lambda callback_query: callback_query.data == "justback")
async def justback(callback: CallbackQuery, state: FSMContext):
    await callback.message.answer_photo(allids["kakprim"],"""–í —ç—Ç–æ–º –º–µ–Ω—é —Å–æ–±—Ä–∞–Ω—ã –≤—Å–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é —Å–µ—Ä–≤–∏—Å–∞ <b>Primex</b> 

–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –ø—É–Ω–∫—Ç

""",parse_mode="HTML",reply_markup=buttons.sec)


# –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é , —Å –ª—é–±–æ–≥–æ –º–µ—Å—Ç–∞ 
@dp.callback_query(lambda callback_query: callback_query.data == "mainmenu")
async def getbacktomainmenu(callback: CallbackQuery, state: FSMContext):
    await callback.message.answer_photo(allids["logo"],"""<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Primex: </b>
–í–∞—à –Ω–∞–¥–µ–∂–Ω—ã–π –ø–∞—Ä—Ç–Ω–µ—Ä –¥–ª—è —ç–∫—Å–ø—Ä–µ—Å—Å –¥–æ—Å—Ç–∞–≤–∫–∏ –∏–∑ –ö–∏—Ç–∞—è –≤ –†–æ—Å—Å–∏—é!

–ú—ã –¥–æ—Å—Ç–∞–≤–ª—è–µ–º –ø–æ—Å—ã–ª–∫–∏ –∏–∑ –ª—é–±—ã—Ö –∫–∏—Ç–∞–π—Å–∫–∏—Ö –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤ –≤–æ –≤—Å–µ —Ä–µ–≥–∏–æ–Ω—ã –†–æ—Å—Å–∏–∏, —É—á–∏—Ç—ã–≤–∞—è –≤—Å–µ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –±–∞–µ—Ä–æ–≤ –∏ –æ–±–µ—Å–ø–µ—á–∏–≤–∞—è —É–¥–æ–±—Å—Ç–≤–æ –∏ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å –Ω–∞ –∫–∞–∂–¥–æ–º —ç—Ç–∞–ø–µ –¥–æ—Å—Ç–∞–≤–∫–∏.

""",parse_mode="HTML",reply_markup=buttons.mainkb)


# –û—Ç–≤–µ—Ç—ã –Ω–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã 
@dp.callback_query(lambda callback_query: callback_query.data == "qa")
async def questionanswer(callback: CallbackQuery, state: FSMContext):
    await callback.message.answer("""<b>–í –¥–∞–Ω–Ω–æ–º –º–µ–Ω—é —Å–æ–±—Ä–∞–Ω—ã –æ—Ç–≤–µ—Ç—ã –Ω–∞ —Å–∞–º—ã–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã</b>
""",parse_mode="HTML",reply_markup=buttons.answerstoquestions)
    
# deliverytime
@dp.callback_query(lambda callback_query: callback_query.data == "deliverytime")
async def deliverytime(callback: CallbackQuery, state: FSMContext):
    await callback.message.answer("""–°—Ä–æ–∫ –¥–æ—Å—Ç–∞–≤–∫–∏ –¥–æ –ú–æ—Å–∫–≤—ã —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 12-15 –¥–Ω–µ–π –¥–Ω–µ–π —Å –º–æ–º–µ–Ω—Ç–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏
""",parse_mode="HTML")

@dp.callback_query(lambda callback_query: callback_query.data == "howtotrackorders")
async def howtotrackorders(callback: CallbackQuery, state: FSMContext):
    await callback.message.answer_photo(allids["trackingofprod"],"""<b>–ß—Ç–æ–±—ã –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ø–æ—Å—ã–ª–∫–∏, –º—ã –æ—Ç–ø—Ä–∞–≤–∏–º –≤–∞–º –Ω–∞ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é –ø–æ—á—Ç—É —Ç—Ä–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π</b>

–ö–æ–≥–¥–∞ –ø–æ—Å—ã–ª–∫–∞ –ø–æ—Å—Ç—É–ø–∏—Ç –Ω–∞ –Ω–∞—à —Å–∫–ª–∞–¥

–ö–æ–≥–¥–∞ –º—ã –æ—Ç–ø—Ä–∞–≤–∏–º –µ—ë –∫ –≤–∞–º

–ö–æ–≥–¥–∞ –ø–æ—Å—ã–ª–∫–∞ –ø—Ä–∏–±—É–¥–µ—Ç –≤ –ú–æ—Å–∫–≤—É


–í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Å—Ç–∞—Ç—É—Å –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ: https://primexcargo.org/tracking

""",parse_mode="HTML")
    
@dp.callback_query(lambda callback_query: callback_query.data == "rulesofgetting")
async def rulesofgetting(callback: CallbackQuery, state: FSMContext):
    await callback.message.answer("""–ü–æ—Å–ª–µ –ø—Ä–∏–±—ã—Ç–∏—è –≥—Ä—É–∑–∞ –≤–∞–º –Ω–∞ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é –ø–æ—á—Ç—É –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–∏—Å—å–º–æ —Å —Ä–∞—Å—á–µ—Ç–æ–º
–∏ —Å—Å—ã–ª–∫–æ–π –Ω–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–ø–ª–∞—Ç–∏—Ç—å, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —á–µ–∫ –∏ –æ—Ñ–æ—Ä–º–∏—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É
–ø–æ –†–æ—Å—Å–∏–∏ –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ.
""",parse_mode="HTML")









 


async def main() -> None:
    
    # Initialize Bot instance with a default parse mode which will be passed to all API calls
    
    # And the run events dispatching
    await dp.start_polling(bot)


if __name__ == "__main__":
    logging.basicConfig(level=logging.INFO, stream=sys.stdout)
    asyncio.run(main())


