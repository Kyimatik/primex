import json
import asyncio
import logging
import sys

from aiogram import Bot, Dispatcher, Router, types , F 
from aiogram.enums import ParseMode
from aiogram.filters import CommandStart , Command
from aiogram.types import Message , CallbackQuery ,FSInputFile
from aiogram.utils.markdown import hbold
from aiogram.fsm.context import FSMContext
from aiogram.types import ReplyKeyboardMarkup , InlineKeyboardMarkup , InlineKeyboardButton 
from aiogram.methods import SendMediaGroup
from aiogram.types import InputMediaPhoto 
from aiogram.types import ContentType
import buttonscargo


# All handlers should be attached to the Router (or Dispatcher)

TOKEN = "?" # Primex Cargo

allids = {
    "logo" : "AgACAgIAAxkBAAMCZy5MSDbnOviB_VCBeJ1NfhO5e08AAuvpMRtu9XBJdEY8CocI19EBAAMCAAN5AAM2BA",# –ª–æ–≥–æ—Ç–∏–ø
    "screenshot" : "AgACAgIAAxkBAANBZy5XJM0LO6t-8WLd_P7UzjuVcYIAAhbqMRtu9XBJYweP8PLNla8BAAMCAAN5AAM2BA", # —Å–∫—Ä–∏–Ω –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞
    "howthatworks" : "AgACAgIAAxkBAAN4Zy5lJG6m7B1vOwuRnghLe4VU89EAApDlMRvaFnlJOBT3H9GP52wBAAMCAAN5AAM2BA", # —Å–∫–ª–∞–¥ –≤ –≥–æ–ª–æ–º –≤–∏–¥–µ
    "howtotrackorder" : "AgACAgIAAxkBAAOOZy5xmwPJ_jq0vNluNrGixnNTOYMAAtrlMRvaFnlJCwYlH5efNBQBAAMCAAN5AAM2BA",# –º—É–∂–∏–∫ –∏—â–µ—Ç –∑–∞–∫–∞–∑
    "cutewoman" : "AgACAgIAAxkBAAPIZy54PKnxb-onUDzwriX2LQI0yfMAApTrMRtu9XBJEGTDpRqPi7sBAAMCAAN4AAM2BA" # –º–∏–ª–∞—è –∂–µ–Ω—â–∏–Ω–∞ 
}


bot = Bot(TOKEN)
dp = Dispatcher()
router = Router()

# —Å–∞–º–∞—è –Ω–∞—á–∞–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ —Å—Ç–∞—Ä—Ç 
@dp.message(Command("start"))
async def getstarted(message: Message):
    await message.answer_photo(allids["logo"],"""<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Primex:</b>
–ú—ã —è–≤–ª—è–µ–º—Å—è —Å–µ—Ä–≤–∏—Å–æ–º –ø–æ –¥–æ—Å—Ç–∞–≤–∫–µ –≤–∞—à–∏—Ö –ª—é–±–∏–º—ã—Ö –±—Ä–µ–Ω–¥–æ–≤ –∏–∑ –ª—é–±–æ–≥–æ –∞–º–µ—Ä–∏–∫–∞–Ω—Å–∫–æ–≥–æ, –∫–∏—Ç–∞–π—Å–∫–æ–≥–æ, —Ç—É—Ä–µ—Ü–∫–æ–≥–æ –∏ –µ–≤—Ä–æ–ø–µ–π—Å–∫–æ–≥–æ —Å–∞–π—Ç–∞ –∏ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞ –≤–æ –≤—Å–µ —Ä–µ–≥–∏–æ–Ω—ã –†–æ—Å—Å–∏–∏.

""",parse_mode="HTML",reply_markup=buttonscargo.mainkb)
    






# –æ—Ç–≤–µ—Ç –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ , üëâ –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è Primex üëà
@dp.callback_query(lambda callback_query: callback_query.data == "howtouse")
async def howtouse(callback: CallbackQuery, state: FSMContext):
    await callback.message.answer_photo(allids["cutewoman"],"""–í —ç—Ç–æ–º –º–µ–Ω—é —Å–æ–±—Ä–∞–Ω—ã –≤—Å–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é —Å–µ—Ä–≤–∏—Å–∞ <b>Primex</b> 

–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –ø—É–Ω–∫—Ç
""",parse_mode="HTML",reply_markup=buttonscargo.sec)
    
    
# –æ—Ç–≤–µ—Ç –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ , –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç ? 
@dp.callback_query(lambda callback_query: callback_query.data == "howthisworks")
async def howthisworks(callback: CallbackQuery, state: FSMContext):
    await callback.message.answer_photo(allids["howthatworks"],"""<b>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</b>

–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –Ω–∞–º–∏, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
–ø—Ä–æ–π—Ç–∏
–±—ã—Å—Ç—Ä—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∞–¥—Ä–µ—Å —Å–∫–ª–∞–¥–∞ –≤ –ö–∏—Ç–∞–µ


<b>–í—ã–∫—É–ø —Ç–æ–≤–∞—Ä–∞</b>

–ó–∞–∫–∞–∑—ã–≤–∞–π—Ç–µ —Ç–æ–≤–∞—Ä—ã –∏–∑ –ö–∏—Ç–∞–π—Å–∫–∏—Ö
–º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤ –∫ –Ω–∞–º –Ω–∞ —Å–∫–ª–∞–¥ –≤ –ì—É–∞–Ω—á–∂–æ—É


<b>–ü—Ä–∏–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞</b>

–ü–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞ —Å–∫–ª–∞–¥–µ –≤–∞—à–∏—Ö –∑–∞–∫–∞–∑–æ–≤
–ú—ã –∏—Ö –∫–æ–Ω—Å–æ–ª–∏–¥–∏—Ä—É–µ–º, —É–ø–∞–∫—É–µ–º –∏ –≥–æ—Ç–æ–≤–∏–º –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ


<b>–î–æ—Å—Ç–∞–≤–ª—è–µ–º –¥–æ –≤–∞—à–∏—Ö —Ä—É–∫</b>

–î–æ—Å—Ç–∞–≤–ª—è–µ–º –≤–æ –≤—Å–µ —Ä–µ–≥–∏–æ–Ω—ã –†–æ—Å—Å–∏–∏. –î–æ –í–∞—à–µ–≥–æ
–∞–¥—Ä–µ—Å–∞ –∏–ª–∏ –¥–æ –±–ª–∏–∂–∞–π—à–µ–≥–æ –ø—É–Ω–∫—Ç–∞ –≤—ã–¥–∞—á–∏.


""",parse_mode="HTML",reply_markup=buttonscargo.howtotrack)

# –≤–æ–≤–∑—Ä–∞—â–µ–Ω–∏–µ –∫ –∫–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏ —Å—Å—ã–ª–∫–∞ –Ω–∞ —Ä–µ–≥
@dp.callback_query(lambda callback_query: callback_query.data == "backtohowtouse")
async def backtohowtouse(callback: CallbackQuery, state: FSMContext):
    await callback.message.answer_photo(allids["cutewoman"],"""–í —ç—Ç–æ–º –º–µ–Ω—é —Å–æ–±—Ä–∞–Ω—ã –≤—Å–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é —Å–µ—Ä–≤–∏—Å–∞ <b>Primex</b> 

–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –ø—É–Ω–∫—Ç
""",parse_mode="HTML",reply_markup=buttonscargo.sec)


# —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∏ —Å–∫—Ä–∏–Ω—à–æ—Ç 
@dp.callback_query(lambda callback_query: callback_query.data == "kabin")
async def kabin(callback: CallbackQuery, state: FSMContext):
    await callback.message.answer_photo(allids["screenshot"],"""–ü–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤–∞–º —Å—Ç–∞–Ω–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω —É–¥–æ–±–Ω—ã–π –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç, –≥–¥–µ –≤—ã –Ω–∞–π–¥–µ—Ç–µ –∞–¥—Ä–µ—Å–∞ –Ω–∞—à–∏—Ö —Å–∫–ª–∞–¥–æ–≤ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏ –ø–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º—É –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—é –¥–∞–Ω–Ω—ã—Ö. 
–í –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ –≤—ã —Å–º–æ–∂–µ—Ç–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Å–≤–æ–∏ –ø–æ—Å—ã–ª–∫–∏, –∑–∞–∫–∞–∑—ã–≤–∞—Ç—å –≤—ã–∫—É–ø —Ç–æ–≤–∞—Ä–æ–≤ –∏ –ø–æ–¥–∫–ª—é—á–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏.
""",reply_markup=buttonscargo.screen)


# backtomainkb –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –∫ –≥–ª–∞–≤–Ω–æ–π –º–µ–Ω—é—à–∫–µ 
@dp.callback_query(lambda callback_query: callback_query.data == "backtomainkb")
async def backtomainkb(callback: CallbackQuery, state: FSMContext):
    await callback.message.answer_photo(allids["logo"],"""–ú—ã —è–≤–ª—è–µ–º—Å—è —Å–µ—Ä–≤–∏—Å–æ–º –ø–æ –¥–æ—Å—Ç–∞–≤–∫–µ –≤–∞—à–∏—Ö –ª—é–±–∏–º—ã—Ö –±—Ä–µ–Ω–¥–æ–≤
–∏–∑ –ª—é–±–æ–≥–æ –∞–º–µ—Ä–∏–∫–∞–Ω—Å–∫–æ–≥–æ, –∫–∏—Ç–∞–π—Å–∫–æ–≥–æ, —Ç—É—Ä–µ—Ü–∫–æ–≥–æ –∏ –µ–≤—Ä–æ–ø–µ–π—Å–∫–æ–≥–æ —Å–∞–π—Ç–∞ –∏ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞ –≤–æ –≤—Å–µ —Ä–µ–≥–∏–æ–Ω—ã –†–æ—Å—Å–∏–∏.

""",parse_mode="HTML",reply_markup=buttonscargo.mainkb)
    
    

# –∫–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–ª usachi
@dp.callback_query(lambda callback_query: callback_query.data == "usachi")
async def usachi(callback: CallbackQuery, state: FSMContext):
    await callback.message.answer("""–ó–¥–µ—Å—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–ª—è –∫–∞–∂–¥–æ–π —Å—Ç—Ä–∞–Ω—ã.
""",reply_markup=buttonscargo.pricecount)
    
# –†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å 
@dp.callback_query(lambda callback_query: callback_query.data == "pricecount")
async def pricecount(callback: CallbackQuery, state: FSMContext):
    await callback.message.answer("""–ó–¥–µ—Å—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–ª—è –∫–∞–∂–¥–æ–π —Å—Ç—Ä–∞–Ω—ã.
""",reply_markup=buttonscargo.pricecount)
    
    
# –°–®–ê
@dp.callback_query(lambda callback_query: callback_query.data == "us")
async def us(callback: CallbackQuery, state: FSMContext):
    await callback.message.answer("""–°—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞ –∫–≥ 17$.
–°—Ä–æ–∫ –¥–æ—Å—Ç–∞–≤–∫–∏ 14-16 –¥–Ω–µ–π.
–í–µ—Å –æ–∫—Ä—É–≥–ª—è–µ—Ç—Å—è –æ—Ç 1 –∫–≥.
–û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç 1 —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é.


""",reply_markup=buttonscargo.backtocountries)
    
    
#–ö–∏—Ç–∞–π
@dp.callback_query(lambda callback_query: callback_query.data == "cn")
async def cn(callback: CallbackQuery, state: FSMContext):
    await callback.message.answer("""–°—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞ –∫–≥ 7$.
–°—Ä–æ–∫ –¥–æ—Å—Ç–∞–≤–∫–∏ 12-15 –¥–Ω–µ–π.
–í–µ—Å –æ–∫—Ä—É–≥–ª—è–µ—Ç—Å—è –æ—Ç 1 –∫–≥.
–û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç 5 —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é.

""",reply_markup=buttonscargo.backtocountries)
    
    
# –¢—É—Ä—Ü–∏—è 
@dp.callback_query(lambda callback_query: callback_query.data == "tu")
async def tu(callback: CallbackQuery, state: FSMContext):
    await callback.message.answer("""–°—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞ –∫–≥ 10$.
–°—Ä–æ–∫ –¥–æ—Å—Ç–∞–≤–∫–∏ 4-5 –¥–Ω–µ–π.
–í–µ—Å –æ–∫—Ä—É–≥–ª—è–µ—Ç—Å—è –æ—Ç 1 –∫–≥.
–û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç 5 —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é.


""",reply_markup=buttonscargo.backtocountries)
    
    
# –ò—Ç–∞–ª–∏—è
@dp.callback_query(lambda callback_query: callback_query.data == "it")
async def it(callback: CallbackQuery, state: FSMContext):
    await callback.message.answer("""–°—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞ –∫–≥ 17‚Ç¨.
–°—Ä–æ–∫ –¥–æ—Å—Ç–∞–≤–∫–∏ 14-16 –¥–Ω–µ–π.
–í–µ—Å –æ–∫—Ä—É–≥–ª—è–µ—Ç—Å—è –æ—Ç 1 –∫–≥.
–û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç 1 —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é.

""",reply_markup=buttonscargo.backtocountries)

# –ø–æ–º–æ—â—å —Å –≤—ã–∫—É–ø–æ–º helpwithbuying
@dp.callback_query(lambda callback_query: callback_query.data == "helpwithbuying")
async def helpwithbuying(callback: CallbackQuery, state: FSMContext):
    await callback.message.answer("""–í–∞—à –ª–∏—á–Ω—ã–π –±–∞–π–µ—Ä –≤ –º–∏—Ä–µ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã—Ö –ø–æ–∫—É–ø–æ–∫.

–°–ª—É–∂–±–∞ <b>Primex</b> –ø–æ–º–æ–∂–µ—Ç –ª–µ–≥–∫–æ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ —Ç–æ–≤–∞—Ä—ã –≤ –∑–∞—Ä—É–±–µ–∂–Ω—ã—Ö –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞—Ö. –í—ã–∫—É–ø–∏–º —Ç–æ–≤–∞—Ä—ã —Å —Å–∞–π—Ç–æ–≤ –∑–∞ –≤–∞—Å –≤ —Ç–æ—Ç –∂–µ –¥–µ–Ω—å ‚Äì –±—ã—Å—Ç—Ä–æ, –ª–µ–≥–∫–æ –∏ –¥–æ—Å—Ç—É–ø–Ω–æ.

–ü–æ—Å–ª–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞—è–≤–∫–∏, –±–∞–π–µ—Ä - @PrimexCargo, —Å–∞–º —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ 2-—Ö —á–∞—Å–æ–≤ –≤ —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è.


""",parse_mode="HTML",reply_markup=buttonscargo.backtomainmenu)


# –æ—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã 
@dp.callback_query(lambda callback_query: callback_query.data == "qa")
async def qa(callback: CallbackQuery, state: FSMContext):
    await callback.message.answer("""–í –¥–∞–Ω–Ω–æ–º –º–µ–Ω—é —Å–æ–±—Ä–∞–Ω—ã –æ—Ç–≤–µ—Ç—ã –Ω–∞ —Å–∞–º—ã–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã
""",reply_markup=buttonscargo.otvetynavop)


# –ö–∞–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ø–æ—Å—ã–ª–∫–∏ ?
@dp.callback_query(lambda callback_query: callback_query.data == "howtotrackorders")
async def howtotrackorders(callback: CallbackQuery, state: FSMContext):
    await callback.message.answer_photo(allids["howtotrackorder"],"""<b>–ß—Ç–æ–±—ã –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ø–æ—Å—ã–ª–∫–∏, –º—ã –æ—Ç–ø—Ä–∞–≤–∏–º –≤–∞–º –Ω–∞ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é –ø–æ—á—Ç—É —Ç—Ä–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π</b>

–ö–æ–≥–¥–∞ –ø–æ—Å—ã–ª–∫–∞ –ø–æ—Å—Ç—É–ø–∏—Ç –Ω–∞ –Ω–∞—à —Å–∫–ª–∞–¥

–ö–æ–≥–¥–∞ –º—ã –æ—Ç–ø—Ä–∞–≤–∏–º –µ—ë –∫ –≤–∞–º

–ö–æ–≥–¥–∞ –ø–æ—Å—ã–ª–∫–∞ –ø—Ä–∏–±—É–¥–µ—Ç –≤ –ú–æ—Å–∫–≤—É


–í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Å—Ç–∞—Ç—É—Å –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ: https://primexcargo.org/tracking
""",parse_mode="HTML",reply_markup=buttonscargo.backtoquest)

# –ü—Ä–∞–≤–∏–ª–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Å—ã–ª–∫–∏
@dp.callback_query(lambda callback_query: callback_query.data == "rulesofgetting")
async def rulesofgetting(callback: CallbackQuery, state: FSMContext):
    await callback.message.answer("""–ü–æ—Å–ª–µ –ø—Ä–∏–±—ã—Ç–∏—è –≥—Ä—É–∑–∞ –≤–∞–º –Ω–∞ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é –ø–æ—á—Ç—É –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–∏—Å—å–º–æ —Å —Ä–∞—Å—á–µ—Ç–æ–º
–∏ —Å—Å—ã–ª–∫–æ–π –Ω–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–ø–ª–∞—Ç–∏—Ç—å, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —á–µ–∫ –∏ –æ—Ñ–æ—Ä–º–∏—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É
–ø–æ –†–æ—Å—Å–∏–∏ –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ.
""",parse_mode="HTML",reply_markup=buttonscargo.backtoquest)


# –Ω–∞–∑–∞–¥ –∫ –≤–æ–ø—Ä–æ—Å–∞–º 
@dp.callback_query(lambda callback_query: callback_query.data == "backtoqa")
async def backtoqa(callback: CallbackQuery, state: FSMContext):
    await callback.message.answer("""–í –¥–∞–Ω–Ω–æ–º –º–µ–Ω—é —Å–æ–±—Ä–∞–Ω—ã –æ—Ç–≤–µ—Ç—ã –Ω–∞ —Å–∞–º—ã–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã
""",reply_markup=buttonscargo.otvetynavop)





 


async def main() -> None:
    
    # Initialize Bot instance with a default parse mode which will be passed to all API calls
    
    # And the run events dispatching
    await dp.start_polling(bot)


if __name__ == "__main__":
    logging.basicConfig(level=logging.INFO, stream=sys.stdout)
    asyncio.run(main())


